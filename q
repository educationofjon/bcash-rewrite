[1mdiff --git a/lib/primitives/tx.js b/lib/primitives/tx.js[m
[1mindex 62ad0bda..984f1ba8 100644[m
[1m--- a/lib/primitives/tx.js[m
[1m+++ b/lib/primitives/tx.js[m
[36m@@ -52,11 +52,9 @@[m [mclass TX {[m
 [m
     this._hash = null;[m
     this._hhash = null;[m
[31m-    this._whash = null;[m
 [m
     this._raw = null;[m
     this._size = -1;[m
[31m-    this._witness = -1;[m
     this._sigops = -1;[m
 [m
     this._hashPrevouts = null;[m
[36m@@ -70,7 +68,7 @@[m [mclass TX {[m
   /**[m
    * Inject properties from options object.[m
    * @private[m
[31m-   * @param {Object} options[m
[32m+[m[32m   * @param {NakedTX} options[m
    */[m
 [m
   fromOptions(options) {[m
[36m@@ -105,7 +103,7 @@[m [mclass TX {[m
 [m
   /**[m
    * Instantiate TX from options object.[m
[31m-   * @param {Object} options[m
[32m+[m[32m   * @param {NakedTX} options[m
    * @returns {TX}[m
    */[m
 [m
[36m@@ -151,11 +149,9 @@[m [mclass TX {[m
   refresh() {[m
     this._hash = null;[m
     this._hhash = null;[m
[31m-    this._whash = null;[m
 [m
     this._raw = null;[m
     this._size = -1;[m
[31m-    this._witness = -1;[m
     this._sigops = -1;[m
 [m
     this._hashPrevouts = null;[m
[36m@@ -1369,39 +1365,37 @@[m [mclass TX {[m
   }[m
 [m
   /**[m
[31m-   * Calculate sigops cost, taking into account witness programs.[m
[32m+[m[32m   * Calculate sigops cost,[m
    * @param {CoinView} view[m
    * @param {VerifyFlags?} flags[m
[31m-   * @returns {Number} sigop weight[m
[32m+[m[32m   * @returns {Number} sigop[m
    */[m
 [m
[31m-  getSigopsCost(view, flags) {[m
[32m+[m[32m  getSigopsCount(view, flags) {[m
     if (flags == null)[m
       flags = Script.flags.STANDARD_VERIFY_FLAGS;[m
 [m
[31m-    const scale = consensus.WITNESS_SCALE_FACTOR;[m
[32m+[m[32m    let sigops = this.getLegacySigops();[m
 [m
[31m-    let cost = this.getLegacySigops() * scale;[m
[32m+[m[32m    if (this.isCoinbase()) {[m
[32m+[m[32m      return sigops;[m
[32m+[m[32m    }[m
 [m
     if (flags & Script.flags.VERIFY_P2SH)[m
[31m-      cost += this.getScripthashSigops(view) * scale;[m
[31m-[m
[31m-    if (flags & Script.flags.VERIFY_WITNESS)[m
[31m-      cost += this.getWitnessSigops(view);[m
[32m+[m[32m      sigops += this.getScripthashSigops(view);[m
 [m
[31m-    return cost;[m
[32m+[m[32m    return sigops;[m
   }[m
 [m
   /**[m
[31m-   * Calculate virtual sigop count.[m
[32m+[m[32m   * Calculate sigop count.[m
    * @param {CoinView} view[m
    * @param {VerifyFlags?} flags[m
    * @returns {Number} sigop count[m
    */[m
 [m
   getSigops(view, flags) {[m
[31m-    const scale = consensus.WITNESS_SCALE_FACTOR;[m
[31m-    return (this.getSigopsCost(view, flags) + scale - 1) / scale | 0;[m
[32m+[m[32m    return this.getSigopsCount(view, flags)[m
   }[m
 [m
   /**[m
[36m@@ -1430,9 +1424,12 @@[m [mclass TX {[m
     if (this.outputs.length === 0)[m
       return [false, 'bad-txns-vout-empty', 100];[m
 [m
[31m-    if (this.getBaseSize() > consensus.MAX_BLOCK_SIZE)[m
[32m+[m[32m    if (this.getBaseSize() > consensus.ONE_MEGABYTE)[m
       return [false, 'bad-txns-oversize', 100];[m
 [m
[32m+[m[32m    if (this.getLegacySigops() > policy.MAX_TX_SIGOPS)[m
[32m+[m[32m      return [false, 'bad-txns-sigops', 100];[m
[32m+[m
     let total = 0;[m
 [m
     for (const output of this.outputs) {[m
[36m@@ -1446,6 +1443,7 @@[m [mclass TX {[m
 [m
       if (total < 0 || total > consensus.MAX_MONEY)[m
         return [false, 'bad-txns-txouttotal-toolarge', 100];[m
[32m+[m
     }[m
 [m
     const prevout = new Set();[m
[36m@@ -1502,7 +1500,7 @@[m [mclass TX {[m
     if (this.version < 1 || this.version > policy.MAX_TX_VERSION)[m
       return [false, 'version', 0];[m
 [m
[31m-    if (this.getWeight() >= policy.MAX_TX_WEIGHT)[m
[32m+[m[32m    if (this.getBaseSize() >= policy.MAX_TX_SIZE)[m
       return [false, 'tx-size', 0];[m
 [m
     for (const input of this.inputs) {[m
